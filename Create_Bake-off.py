import json
from openai import OpenAI
import pandas as pd
import requests
import streamlit as st
import time

st.set_page_config(page_title="Melodi | Create Bake-off", page_icon='melodi_transparent.png', initial_sidebar_state='expanded',)

with st.sidebar:
    melodi_api_key = st.text_input("Melodi API Key", type="password")

def create_experiment(experiment_name, experiment_instructions, comparisons):
    api_key = melodi_api_key
    base_url = "https://app.melodi.fyi/api/external/experiments?apiKey="
    url = base_url + api_key
    headers = {"Content-Type": "application/json"}

    # Data payload for the POST request
    data = {
        "experiment": {
            "name": experiment_name,
            "instructions": experiment_instructions
        },
        "comparisons": comparisons
    }

    # Make the POST request
    response = requests.post(url, headers=headers, data=json.dumps(data))

    return response
st.image('melodi_transparent.png', width=70)
st.title("Create a Melodi Bake-off Evaluation")
st.caption("Ideal for copy/pasting directly from ChatGPT. Enter your Melodi API key in the sidebar to begin.")


experiment_name = st.text_input(
        "Experiment name (reviewers won't see this)",
    )

experiment_instructions = st.text_input(
        "Instructions for reviewers",
    )


col1, col2 = st.columns(2)

with col1:
    prompt_1 = st.text_input(
        "Model or Prompt Name",
        key="placeholder",
        value="Original Prompt"
    )

with col2:
    prompt_2 = st.text_input(
        "Model or Prompt Name (Comparison)",
        value="New Prompt"
    )



df = pd.DataFrame(columns=[prompt_1, prompt_2])
config = {
    prompt_1 : st.column_config.TextColumn(f"Generated by {prompt_1}", width='large', required=True),
    prompt_2 : st.column_config.TextColumn(f" Generated by {prompt_2}", width='large', required=True),
}

samples = st.data_editor(df, column_config = config, num_rows='dynamic')

if st.button('Create Experiment'):
    comparisons = []
    for index, sample in samples.iterrows(): # Loop through rows with iterrows()
        
        comparisons.append({"samples":[
            {"response": sample[prompt_1],"promptLabel": prompt_1}, 
            {"response": sample[prompt_2], "promptLabel": prompt_2} 
        ]})
    
    
    melodi_response = create_experiment(experiment_name, experiment_instructions, comparisons)
    if melodi_response.status_code == 200:
        res = melodi_response.json()
        feedback_url = res.get('feedbackUrl')
        results_url = res.get('resultsUrl')
        
        st.write(f"Feedback URL: {feedback_url}")
        st.write(f"Results URL: {results_url}")
    else:
        response_content = json.loads(melodi_response.content)
        st.write(f"Failed to create experiment. {response_content}")

